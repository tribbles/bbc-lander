    LDA #15
    STA volume
    JSR set_volume
    LDX #LO(lowtone1)
    LDY #HI(lowtone1)
    LDA #3
    JSR set_voicebytes
    LDA current_screen_hi
    CLC
    ADC #2
    STA jtmp + 1
    LDA #0
    STA jtmp
    LDY #0
    LDX #20
.newseed
    RAND8
    STA mathc
    RAND8
    STA mathc + 1
.fill_screen
    CPX #18
    BCS use_rand
    CPX #3
    BCC use_rand
    CPY #24
    BCC use_rand
    CPY #256 - 24
    BCS use_rand
    LDA #0
    STA (jtmp), Y
    INY
    STA (jtmp), Y
    INY
    STA (jtmp), Y
    INY
    STA (jtmp), Y
    INY
    STA (jtmp), Y
    INY
    STA (jtmp), Y
    INY
    STA (jtmp), Y
    INY
    STA (jtmp), Y
    INY
    BNE fill_screen
    BEQ next_line
.use_rand
    RAND16
    AND #&aa
    STA (jtmp), Y
    INY
    RAND8
    AND #&55
    STA (jtmp), Y
    INY
    BNE fill_screen
.next_line
    INC jtmp + 1
    DEX
    BPL newseed
    LDA #255
    STA pixelmask
    STA pixelmask + 1

    LDA #24
    STA x0
    LDA #40
    STA y0
    STA y1
    LDA #255 - 24
    STA x1
    JSR plot_line

    LDA #24
    STA x0
    LDA #20 * 8
    STA y0
    STA y1
    LDA #255 - 24
    STA x1
    JSR plot_line

    LDA #24
    STA x0
    STA x1
    LDA #40
    STA y0
    LDA #20 * 8
    STA y1
    JSR plot_line

    LDA #255 - 24
    STA x0
    STA x1
    LDA #40
    STA y0
    LDA #20 * 8
    STA y1
    JSR plot_line

    LDA #4 * 8
    STA x0
    LDA #6
    STA y0
    LDX #LO(text_dead)
    LDY #HI(text_dead)
    JSR draw_text

    JSR swap_banks

    LDA #0
    STA temp_scene
.wait_return
    LDA #19
    JSR osbyte          ; VSync
    DEC temp_scene
    BPL check_key
    LDA #8
    STA temp_scene
    JSR set_volume
.check_key
    LDA #&81
    LDY #&ff
    LDX #LO(-74)        ; Return
    JSR osbyte
    BCC wait_return
.wait_release
    LDA #&81
    LDY #&ff
    LDX #LO(-74)        ; Return
    JSR osbyte
    BCS wait_release
