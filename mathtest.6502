oswrch = &ffee
ORG &70

GUARD &90

.matha
    SKIP 2
.mathb
    SKIP 1
.mathc
    SKIP 3
.maths
    SKIP 1
.zangle
    SKIP 1
.yangle
    SKIP 1
.jtmp
    SKIP 2
.pixelmask
    SKIP 2
.x0
    SKIP 1
.y0
    SKIP 1
.x1
    SKIP 1
.y1
    SKIP 1
.xlptr
    SKIP 2

ORG &3000
.start
    LDA #1
    LDX #0
    LDY #1
    JSR repmul

    LDA #&ff
    LDX #&ff
    LDY #&ff
    JSR repmul

    LDA #&1
    LDX #&ff
    LDY #&ff
    JSR repmul

    LDA #&1
    LDX #&0
    LDY #&ff
    JSR repmul

    LDA #&10
    LDX #&0
    LDY #&ff
    JSR repmul

    LDA #&10
    LDX #&0
    LDY #&10
    JSR repmul

    LDA #&70
    LDX #&0
    LDY #&70
    JSR repmul

    LDA #&70
    LDX #&70
    LDY #&70
    JSR repmul

    LDA #&70
    LDX #&01
    LDY #&70
    JSR repmul

    LDA #&60
    LDX #&03
    LDY #&60
    JSR repmul

    LDA #&7e
    LDX #&33
    LDY #&60
    JSR repmul

    LDA #&7e
    LDX #&53
    LDY #&5b
    JSR repmul

    LDA #HI(shipdata)
    JSR writehex
    LDA #LO(shipdata)
    JSR writehex
    JSR space

    LDA shipdata + 1
    JSR writehex
    LDA shipdata
    JSR writehex
    JSR space

    JSR fixship

    LDA shipdata + 1
    JSR writehex
    LDA shipdata
    JSR writehex
    JSR space
    LDA shipdata + 3
    JSR writehex
    LDA shipdata + 2
    JSR endhex

    LDA #0
    STA zangle
    STA yangle
    JSR repship

    LDA #16
    STA yangle
    JSR repship

    LDA #32
    STA yangle
    JSR repship

.loop
    JMP loop

.repship
    JSR plot_ship
    PHA
    LDA yangle
    JSR writehex
    JSR comma
    LDA zangle
    JSR writehex
    JSR space
    PLA
    JSR writehex
    JSR comma
    LDA mathb
    JSR writehex

    JSR space

    LDX #xlptr
    JSR writehex4

    JSR comma

    LDX #jtmp
    JSR writehex4

    JSR space

    LDX #matha
    JSR writehex4
    JMP endl

.space
    LDA #' '
    JMP oswrch
.comma
    LDA #','
    JMP oswrch

.plot_line
    LDA x0
    JSR writehex
    JSR comma
    LDA y0
    JSR writehex
    JSR space
    LDA x1
    JSR writehex
    JSR comma
    LDA y1
    JMP endhex

.repmul
    STA matha
    STX matha + 1
    STY mathb

    LDX #matha
    JSR writehex4
    LDA #'x'
    JSR oswrch
    LDA mathb
    JSR writehex
    LDY mathb
    JSR multbyy
    LDA #'='
    JSR oswrch
    LDX #mathc + 1
    JSR writehex4
    LDA mathc
.endhex
    JSR writehex
.endl
    LDA #10
    JSR oswrch
    LDA #13
    JMP oswrch

    INCLUDE "math.6502"

.writehex4
    LDA 1, X
    JSR writehex
    LDA 0, X
.writehex
    PHA
    LSR A
    LSR A
    LSR A
    LSR A
    JSR write4
    PLA
    AND #15
.write4
    CMP #10
    BCC less10
    ADC #'A' - 11
    JMP oswrch
.less10
    ADC #'0'
    JMP oswrch

    ALIGN 64
    INCLUDE "ship.6502"

.end
    SKIP 0
    SAVE "MATHTST", start, end
