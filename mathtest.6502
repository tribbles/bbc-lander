oswrch = &ffee
ORG &70

GUARD &90

.matha
    SKIP 2
.mathb
    SKIP 1
.mathc
    SKIP 3
.maths
    SKIP 1
.digits
.zangle
    SKIP 1
.yangle
    SKIP 1
.jtmp
    SKIP 2
.pixelmask
    SKIP 2
.x0
    SKIP 1
.y0
    SKIP 1
.x1
    SKIP 1
.y1
    SKIP 1
.xlptr
    SKIP 2
.ship_height
    SKIP 1
.land_height
    SKIP 1
.player_y
    SKIP 2
platheight = 240

    INCLUDE "macros.6502"

ORG &3000
.start
    LDA #32
    STA ship_height

    LDA #1
    LDX #0
    LDY #1
    JSR repmul

    LDA #&ff
    LDX #&ff
    LDY #&ff
    JSR repmul

    LDA #&1
    LDX #&ff
    LDY #&ff
    JSR repmul

    LDA #&1
    LDX #&0
    LDY #&ff
    JSR repmul

    LDA #&10
    LDX #&0
    LDY #&ff
    JSR repmul

    LDA #&10
    LDX #&0
    LDY #&10
    JSR repmul

    LDA #&70
    LDX #&0
    LDY #&70
    JSR repmul

    LDA #&70
    LDX #&70
    LDY #&70
    JSR repmul

    LDA #&70
    LDX #&01
    LDY #&70
    JSR repmul

    LDA #&60
    LDX #&03
    LDY #&60
    JSR repmul

    LDA #&7e
    LDX #&33
    LDY #&60
    JSR repmul

    LDA #&7e
    LDX #&53
    LDY #&5b
    JSR repmul

    LDA #HI(shipdata)
    JSR writehex
    LDA #LO(shipdata)
    JSR writehex
    JSR space

    LDA shipdata + 1
    JSR writehex
    LDA shipdata
    JSR writehex
    JSR space

    JSR fixship

    LDA shipdata + 1
    JSR writehex
    LDA shipdata
    JSR writehex
    JSR space
    LDA shipdata + 3
    JSR writehex
    LDA shipdata + 2
    JSR endhex

    LDA #0
    STA zangle
    STA yangle
    JSR repship

    LDA #16
    STA yangle
    JSR repship

    LDA #32
    STA yangle
    JSR repship

    LDA #0
    JSR repsc
    LDA #10
    JSR repsc
    LDA #16
    JSR repsc
    LDA #32
    JSR repsc
    LDA #48
    JSR repsc
    LDA #64
    JSR repsc
    LDA #96
    JSR repsc
    LDA #128
    JSR repsc
    LDA #160
    JSR repsc
    LDA #192
    JSR repsc
    LDA #208
    JSR repsc

    LDA #0
    STA matha
    STA matha + 1
    LDA #0
    JSR repthadd
    LDA #32
    JSR repthadd
    LDA #32
    JSR repthadd
    LDA #LO(-32)
    JSR repthadd
    LDA #LO(-32)
    JSR repthadd
    LDA #LO(-32)
    JSR repthadd
    LDA #LO(-32)
    JSR repthadd

    LDX #64
    LDY #64
    JSR repmulxy
    LDX #LO(-64)
    LDY #64
    JSR repmulxy
    LDX #LO(-64)
    LDY #LO(-64)
    JSR repmulxy
    LDX #64
    LDY #LO(-64)
    JSR repmulxy

    LDX #1
    LDY #64
    JSR repmulxy

    LDX #12
    LDY #34
    JSR repmulxy

    LDX #LO(platheight - 128)
    LDY #HI(platheight - 128)
    JSR rephc

    LDX #LO(platheight - 32)
    LDY #HI(platheight - 32)
    JSR rephc

    LDX #LO(platheight - 1)
    LDY #HI(platheight - 1)
    JSR rephc

    LDX #LO(platheight + 0)
    LDY #HI(platheight + 0)
    JSR rephc

    LDX #LO(platheight + 1)
    LDY #HI(platheight + 1)
    JSR rephc

    LDX #LO(platheight + 32)
    LDY #HI(platheight + 32)
    JSR rephc

    LDX #LO(platheight + 128)
    LDY #HI(platheight + 128)
    JSR rephc

    LDX #128
    LDY #0
    JSR rephc

    LDX #29
    LDY #0
    JSR rephc

    LDX #229
    LDY #1
    JSR rephc

    LDX #LO(12345)
    LDY #HI(12345)
    JSR repdec16

    LDX #LO(1)
    LDY #HI(1)
    JSR repdec16

    LDX #LO(0)
    LDY #HI(0)
    JSR repdec16

    LDX #LO(9)
    LDY #HI(9)
    JSR repdec16

    LDX #LO(10)
    LDY #HI(10)
    JSR repdec16

    LDX #LO(99)
    LDY #HI(99)
    JSR repdec16

    LDX #LO(100)
    LDY #HI(100)
    JSR repdec16

    LDX #LO(255)
    LDY #HI(255)
    JSR repdec16

    LDX #LO(256)
    LDY #HI(256)
    JSR repdec16

    LDX #LO(999)
    LDY #HI(999)
    JSR repdec16

    LDX #LO(1000)
    LDY #HI(1000)
    JSR repdec16

    LDX #LO(1000)
    LDY #HI(1000)
    LDA #1000 / 65536
    JSR repdec24

    LDX #LO(9999)
    LDY #HI(9999)
    LDA #10000 / 65536
    JSR repdec24

    LDX #LO(65535)
    LDY #HI(65535)
    LDA #65535 / 65536
    JSR repdec24

    LDX #LO(65536)
    LDY #HI(65536)
    LDA #65536 / 65536
    JSR repdec24

    LDX #LO(165536)
    LDY #HI(165536)
    LDA #165536 / 65536
    JSR repdec24

    LDX #LO(9165536)
    LDY #HI(9165536)
    LDA #9165536 / 65536
    JSR repdec24

.loop
    JMP loop

.repdec16
{
    STX mathc
    STY mathc + 1
    LDX #mathc
    JSR writehex4
    LDA #'='
    JSR oswrch
    JSR bin2dec16;_fix3
    TAY
    ORA #'0'
    JSR oswrch
    LDA #'+'
    JSR oswrch
    LDA #'0'
.prefix_loop
    CPY #3
    BCS already_long
    JSR oswrch
    INY
    BNE prefix_loop
.already_long
    LDX #0
.rdloop
    LDA digits, X
    BMI rddone
    ORA #&30
    JSR oswrch
    INX
    BNE rdloop
.rddone
    JMP endl
}

.repdec24
{
    STX mathc
    STY mathc + 1
    STA mathc + 2
    JSR writehex
    LDX #mathc
    JSR writehex4
    LDA #'='
    JSR oswrch
    JSR bin2dec24
    TAY
    ORA #'0'
    JSR oswrch
    LDA #'+'
    JSR oswrch
    LDA #'0'
.prefix_loop
    CPY #7
    BCS already_long
    JSR oswrch
    INY
    BNE prefix_loop
.already_long
    LDX #0
.rdloop
    LDA digits, X
    BMI rddone
    ORA #&30
    JSR oswrch
    INX
    BNE rdloop
.rddone
    JMP endl
}

.rephc
    STX player_y
    STY player_y + 1
    LDX #player_y
    JSR writehex4
    LDA #'='
    JSR oswrch

    INCLUDE "hcalc.6502"

    LDA ship_height
    JSR writehex
    JSR comma
    LDA land_height
    JSR writehex
    JSR space
    LDX #mathc
    JSR writehex4
    JMP endl

.repmulxy
    TXA
    JSR writehex
    LDA #'x'
    JSR oswrch
    TYA
    JSR writehex
    LDA #'='
    JSR oswrch
    JSR mulxy
    LDX #mathc
    JSR writehex4
    JMP endl

.repthadd
    TAX
    JSR writehex
    LDA #'+'
    JSR oswrch
    LDA matha
    JSR writehex
    LDA #'='
    JSR oswrch
    TXA
    THRUSTADD matha
    LDA matha 
    JMP endhex

.repsc
    PHA
    JSR writehex
    LDA #'='
    JSR oswrch
    PLA
    JSR sincos
    TXA
    JSR writehex
    JSR comma
    TYA
    JMP endhex

.repship
    JSR plot_ship
    PHA
    LDA yangle
    JSR writehex
    JSR comma
    LDA zangle
    JSR writehex
    JSR space
    PLA
    JSR writehex
    JSR comma
    LDA mathb
    JSR writehex

    JSR space

    LDX #xlptr
    JSR writehex4

    JSR comma

    LDX #jtmp
    JSR writehex4

    JSR space

    LDX #matha
    JSR writehex4
    JMP endl

.space
    LDA #' '
    JMP oswrch
.comma
    LDA #','
    JMP oswrch

.plot_line
    LDA x0
    JSR writehex
    JSR comma
    LDA y0
    JSR writehex
    JSR space
    LDA x1
    JSR writehex
    JSR comma
    LDA y1
    JMP endhex

.repmul
    STA matha
    STX matha + 1
    STY mathb

    LDX #matha
    JSR writehex4
    LDA #'x'
    JSR oswrch
    LDA mathb
    JSR writehex
    LDY mathb
    JSR multbyy
    LDA #'='
    JSR oswrch
    LDX #mathc + 1
    JSR writehex4
    LDA mathc
.endhex
    JSR writehex
.endl
    LDA #10
    JSR oswrch
    LDA #13
    JMP oswrch

    INCLUDE "math.6502"

.writehex4
    LDA 1, X
    JSR writehex
    LDA 0, X
.writehex
    PHA
    LSR A
    LSR A
    LSR A
    LSR A
    JSR write4
    PLA
    AND #15
.write4
    CMP #10
    BCC less10
    ADC #'A' - 11
    JMP oswrch
.less10
    ADC #'0'
    JMP oswrch

    ALIGN 64
    INCLUDE "ship.6502"

.end
    SKIP 0
    SAVE "MATHTST", start, end
