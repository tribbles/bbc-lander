oswrch   = &ffee
screen   = &6800
screen1  = &5000
screen2  = &6800

displaysize = 7
centresize = 3
maxypos = 24 * 8

;map      = &1000 ; 64x64 map

    GUARD    screen1
;GUARD    map

    INCLUDE   "zeropage.6502"

    ORG &2000

.start
    JSR set_mode
    JSR init_bits
    JSR init_screen
    JSR clear_bank
    JSR swap_banks
    JSR clear_bank

    LDX #4
    JSR set_colour
    LDA #0
    STA xoffset
    STA yoffset

    LDA #0
    STA thrust

    LDA #16
    STA angle
    LDA #32
    STA player_x
    STA player_y
    LDA #127
    STA mapx
    STA mapy
    
.endforever

; Loop 1 - calculate the X and Y coordinates of the map
{
    LDA #0
    STA offset     ; We start off at this point

    LDA mapx
    LSR A
    LSR A
    LSR A
    LSR A
    LSR A
    STA xoffset     ; Calculate the fractional X map display (0..7)

    LDA mapy
    LSR A
    LSR A
    LSR A
    LSR A
    LSR A
    STA yoffset     ; Calculate the fractional Y map display (0..7)

    LDA #displaysize - 1
    STA jtmp        ; This is the current Y coordinate
.yloop
    LDA jtmp        ; (0..<size>)
    ASL A
    ASL A
    ASL A           ; (0..<size>*8)
    ORA yoffset     ; Add in the fractional offset
    STA jtmp + 2
; Get the tree height
    TAY
    LDA theight, Y
    LDY jtmp
    LSR A
    STA treeheight, Y

; Calculate the map position
    LDA mapy + 1
    SEC
    SBC jtmp
    CLC
    ADC #centresize ; Map centre Y
    AND #63
    TAX
    ASL A
    ASL A
    ASL A
    ASL A
    ASL A
    ASL A
    STA mapread + 1 ; A little bit of self-modifying code...
    TXA
    LSR A
    LSR A
    CLC
    ADC #HI(map)
    STA mapread + 2 ; And a bit more...

    LDA #displaysize - 1
    STA jtmp + 1   ; This is the current X coordinate
.xloop
    LDA jtmp + 1
    ASL A
    ASL A
    ASL A
    ADC xoffset    ; This is the fractional offset (carry is clear; jtmp+1 is a maximum of 6)
    SEC
    SBC #centresize + centresize * 8 ; This moves the centre of the display
    TAY
    LDX jtmp + 2
    JSR depthX
    
    LDA mathc + 1
    CLC
    ADC #127
    TAX
    LDA mathc + 2
    ADC #0
    BEQ onscreenx
    BMI toleft
    LDX #255
    BNE onscreenx
.toleft
    LDX #0
.onscreenx
    TXA
    LDY offset
    STA xlocs, Y

    ; Now we add in the map X offset
    LDA mapx + 1
    SEC
    SBC jtmp + 1
    CLC
    ADC #centresize ; Centre it
    AND #63
    TAY
.mapread
    LDA map, Y
    TAY
    AND #192
    LDX offset
    STA collocs, X
    TYA
    AND #63        ; Remove trees and whatever I want the other bit to be!
    CLC
    ADC #4
    TAY

    LDX jtmp + 2
    JSR depthY
    
    LDA mathc + 1
    CLC
    ADC #40        ; This is the height
    TAX
    LDA mathc + 2
    ADC #0
    BEQ onscreeny
    BMI above
    LDA #maxypos
    BNE sety
.above
    LDX #0
.onscreeny
    TXA
    CMP #maxypos
    BCC sety
    LDA #maxypos
.sety
    LDY offset
    STA ylocs, Y
    INC offset     ; Go on to the next coordinate
    
    DEC jtmp + 1
    BPL xloop
    DEC jtmp
    BMI alldone
    JMP yloop
.alldone
}

    LDA #255
    STA pixelmask
    STA pixelmask + 1
    STA lastcol

; Loop 2 - draw the horizontal lines
{
    STA lastcol
    LDA #displaysize - 1
    STA jtmp
    LDA #0
    STA offset
.xloop
    LDA #displaysize - 2
    STA jtmp + 1
    LDY offset
    LDA xlocs, Y
    STA ocoord
    LDA ylocs, Y
    STA ocoord + 1
    INC offset
.yloop
    LDA ocoord
    STA x0
    LDA ocoord + 1
    STA y0
    LDY offset
    LDA xlocs, Y
    STA x1
    STA ocoord
    LDA ylocs, Y
    STA y1
    STA ocoord + 1
    LDA collocs, Y
    AND #64
    CMP lastcol
    BEQ colsame
    STA lastcol
    CMP #0
    BNE water
    LDA #255
    STA pixelmask
    STA pixelmask + 1
    BNE colsame
.water
    LDA #&aa
    STA pixelmask
    LSR A
    STA pixelmask + 1
.colsame
    INC offset
    JSR plot_line
    DEC jtmp + 1
    BPL yloop
    DEC jtmp
    BPL xloop
}

; Loop 3 - draw the vertical linzes
{
    LDA #displaysize - 1
    STA jtmp
    LDA #0
    STA offset
.xloop
    LDA #displaysize - 2
    STA jtmp + 1
    LDY offset
    LDA xlocs, Y
    STA ocoord
    LDA ylocs, Y
    STA ocoord + 1
    LDA offset
    CLC
    ADC #displaysize
    STA offset
.yloop
    LDA ocoord
    STA x0
    LDA ocoord + 1
    STA y0
    LDY offset
    LDA xlocs, Y
    STA x1
    STA ocoord
    LDA ylocs, Y
    STA y1
    STA ocoord + 1
    LDA collocs, Y
    AND #64
    CMP lastcol
    BEQ colsame
    STA lastcol
    CMP #0
    BNE water
    LDA #255
    STA pixelmask
    STA pixelmask + 1
    BNE colsame
.water
    LDA #&aa
    STA pixelmask
    LSR A
    STA pixelmask + 1
.colsame
    LDA offset
    CLC
    ADC #displaysize
    STA offset
    JSR plot_line
    DEC jtmp + 1
    BPL yloop
    LDA offset
    SEC
    SBC #displaysize * displaysize - 1
    STA offset
    DEC jtmp
    BPL xloop
}

; Loop 4 - trees
{
    LDA #255
    STA pixelmask
    STA pixelmask + 1

    LDA #displaysize - 1
    STA jtmp
    LDA #0
    STA offset
.xloop
    LDA #displaysize - 1
    STA jtmp + 1
.yloop
    LDY offset
    LDA collocs, Y
    BPL notree

    LDA xlocs, Y
    STA x1
    STA x0
    STA treecx
    LDA ylocs, Y
    STA y1
    STA treey

; Plot the trunk
    LDX jtmp
    LDA treeheight, X
    STA treeh
    LDA y1
    SEC
    SBC treeh
.treeokay
    STA y0
    STA treey
    JSR plot_line

; Plot the base of the triangle
    LDA treey
    STA y1
    LDA treecx
    SEC
    SBC treeh
    BCS left
    LDA #0
.left
    STA x0
    STA ocoord
    LDA treecx
    CLC
    ADC treeh
    BCC right
    LDA #255
.right
    STA x1
    STA treerx
    JSR plot_line

; Plot the left of the triangle
    LDA treelx
    STA x1
    LDA treecx
    STA x0
    LDA treey
    STA y1
    SEC
    SBC treeh
    SBC treeh
    STA y0
    STA treeh       ; Don't need the height any more
    JSR plot_line
; Plot the right of the triangle
    LDA treecx
    STA x0
    LDA treerx
    STA x1
    LDA treey
    STA y1
    LDA treeh
    STA y0
    JSR plot_line
.notree
    INC offset
    DEC jtmp + 1
    BPL yloop
    DEC jtmp
    BMI done
    JMP xloop
.done
}

    JSR swap_banks
    JSR clear_bank

    LDA angle
    LDY thrust
    JSR sin
    LDA mapy
    CLC
    ADC mathc + 1
    STA mapy
    LDA mapy + 1
    ADC mathc + 2
    STA mapy + 1

    LDA angle
    LDY thrust
    JSR cos
    LDA mapx
    CLC
    ADC mathc + 1
    STA mapx
    LDA mapx + 1
    ADC mathc + 2
    STA mapx + 1
    INC angle

    JMP endforever
    
.xlocs
    SKIP displaysize * displaysize
.ylocs
    SKIP displaysize * displaysize
.collocs
    SKIP displaysize * displaysize
.treeheight
    SKIP displaysize

.plot_tree
    RTS

.mark
    LDX x1
    LDY y1
    DEX
    DEX
    JSR pixelp
    LDX x1
    INX
    INX
    JSR pixelp
    LDX x1
    INY
    INY
    JSR pixelp
    LDY y1
    DEY
    DEY
    JMP pixelp

    INCLUDE  "screen.6502"
    INCLUDE  "draw.6502"
    INCLUDE  "math.6502"

    ALIGN 256
.map
    INCBIN   "map.bin"
    EQUB 0
.end

    SAVE "Lander", start, end
